state 21 contains 7 reduce/reduce conflicts
state 31 contains 4 shift/reduce conflicts
state 32 contains 4 shift/reduce conflicts
state 33 contains 4 shift/reduce conflicts
state 34 contains 4 shift/reduce conflicts
state 42 contains 7 reduce/reduce conflicts

rule 11 (rvalCommaListLoop) never reduced
rule 12 (rvalCommaListLoop) never reduced

-------- Grammar --------

rule 1 target: exp
rule 2 avg_str: "a" "v" "g"
rule 3 best_str: "b" "e" "s" "t"
rule 4 avg_list: rvalCommaListLoop
rule 5 avg_list: "(" rvalCommaListLoop ")"
rule 6 rvalCommaListLoop: rval
rule 7 rvalCommaListLoop: rvalCommaListLoop "," rval
rule 8 avg: avg_str avg_list
rule 9 best_list: rvalCommaListLoop
rule 10 best_list: "(" NUMBER "," rvalCommaListLoop ")"
rule 11 rvalCommaListLoop: rval
rule 12 rvalCommaListLoop: rvalCommaListLoop "," rval
rule 13 best: best_str best_list
rule 14 rval: "a"
rule 15 rval: "b"
rule 16 rval: "c"
rule 17 exp: exp "+" exp
rule 18 exp: exp "*" exp
rule 19 exp: exp "/" exp
rule 20 exp: exp "-" exp
rule 21 exp: "(" exp ")"
rule 22 exp: avg
rule 23 exp: best
rule 24 exp: "a"
rule 25 exp: "b"
rule 26 exp: "c"
rule 27 exp: NUMBER

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (18)
    on right: 
    on left : 
  target (19)
    on right: 
    on left : 1
  exp (20)
    on right: 1 17 18 19 20 21
    on left : 17 18 19 20 21 22 23 24 25 26 27
  avg_str (21)
    on right: 8
    on left : 2
  best_str (22)
    on right: 13
    on left : 3
  avg_list (23)
    on right: 8
    on left : 4 5
  rvalCommaListLoop (24)
    on right: 4 5 7 9 10 12
    on left : 6 7 11 12
  rval (25)
    on right: 6 7 11 12
    on left : 14 15 16
  avg (26)
    on right: 22
    on left : 8
  best_list (27)
    on right: 13
    on left : 9 10
  best (28)
    on right: 23
    on left : 13

**Terminals, with rules where they appear

  $end (0) 
  error (1) 
  "a" (2) 2 14 24
  "v" (3) 2
  "g" (4) 2
  "b" (5) 3 15 25
  "e" (6) 3
  "s" (7) 3
  "t" (8) 3
  "(" (9) 5 10 21
  ")" (10) 5 10 21
  "," (11) 7 10 12
  NUMBER (12) 10 27
  "c" (13) 16 26
  "+" (14) 17
  "*" (15) 18
  "/" (16) 19
  "-" (17) 20

--------- State ---------

state 0


  "a"           shift, and go to state 3
  "b"           shift, and go to state 4
  "("           shift, and go to state 7
  NUMBER        shift, and go to state 11
  "c"           shift, and go to state 10

  target        go to state 1
  exp           go to state 2
  avg_str       go to state 5
  best_str      go to state 6
  avg           go to state 8
  best          go to state 9

state 1


  $end          shift, and go to state 12


state 2

   1) target : exp _
  17) exp : exp _ "+" exp
  18) exp : exp _ "*" exp
  19) exp : exp _ "/" exp
  20) exp : exp _ "-" exp

  "+"           shift, and go to state 13
  "*"           shift, and go to state 14
  "/"           shift, and go to state 15
  "-"           shift, and go to state 16
  $default      reduce using rule 1 (target)


state 3

   2) avg_str : "a" _ "v" "g"
  24) exp : "a" _

  "v"           shift, and go to state 17
  $default      reduce using rule 24 (exp)


state 4

   3) best_str : "b" _ "e" "s" "t"
  25) exp : "b" _

  "e"           shift, and go to state 18
  $default      reduce using rule 25 (exp)


state 5

   8) avg : avg_str _ avg_list

  "a"           shift, and go to state 23
  "b"           shift, and go to state 24
  "("           shift, and go to state 20
  "c"           shift, and go to state 25

  rvalCommaListLoop  go to state 19
  rval          go to state 21
  avg_list      go to state 22

state 6

  13) best : best_str _ best_list

  "a"           shift, and go to state 23
  "b"           shift, and go to state 24
  "("           shift, and go to state 27
  "c"           shift, and go to state 25

  rval          go to state 21
  rvalCommaListLoop  go to state 26
  best_list     go to state 28

state 7

  21) exp : "(" _ exp ")"

  "a"           shift, and go to state 3
  "b"           shift, and go to state 4
  "("           shift, and go to state 7
  NUMBER        shift, and go to state 11
  "c"           shift, and go to state 10

  avg_str       go to state 5
  best_str      go to state 6
  exp           go to state 29
  avg           go to state 8
  best          go to state 9

state 8

  22) exp : avg _

  $default      reduce using rule 22 (exp)


state 9

  23) exp : best _

  $default      reduce using rule 23 (exp)


state 10

  26) exp : "c" _

  $default      reduce using rule 26 (exp)


state 11

  27) exp : NUMBER _

  $default      reduce using rule 27 (exp)


state 12


  $end          shift, and go to state 30


state 13

  17) exp : exp "+" _ exp

  "a"           shift, and go to state 3
  "b"           shift, and go to state 4
  "("           shift, and go to state 7
  NUMBER        shift, and go to state 11
  "c"           shift, and go to state 10

  avg_str       go to state 5
  best_str      go to state 6
  exp           go to state 31
  avg           go to state 8
  best          go to state 9

state 14

  18) exp : exp "*" _ exp

  "a"           shift, and go to state 3
  "b"           shift, and go to state 4
  "("           shift, and go to state 7
  NUMBER        shift, and go to state 11
  "c"           shift, and go to state 10

  avg_str       go to state 5
  best_str      go to state 6
  exp           go to state 32
  avg           go to state 8
  best          go to state 9

state 15

  19) exp : exp "/" _ exp

  "a"           shift, and go to state 3
  "b"           shift, and go to state 4
  "("           shift, and go to state 7
  NUMBER        shift, and go to state 11
  "c"           shift, and go to state 10

  avg_str       go to state 5
  best_str      go to state 6
  exp           go to state 33
  avg           go to state 8
  best          go to state 9

state 16

  20) exp : exp "-" _ exp

  "a"           shift, and go to state 3
  "b"           shift, and go to state 4
  "("           shift, and go to state 7
  NUMBER        shift, and go to state 11
  "c"           shift, and go to state 10

  avg_str       go to state 5
  best_str      go to state 6
  exp           go to state 34
  avg           go to state 8
  best          go to state 9

state 17

   2) avg_str : "a" "v" _ "g"

  "g"           shift, and go to state 35


state 18

   3) best_str : "b" "e" _ "s" "t"

  "s"           shift, and go to state 36


state 19

   4) avg_list : rvalCommaListLoop _
   7) rvalCommaListLoop : rvalCommaListLoop _ "," rval
  12) rvalCommaListLoop : rvalCommaListLoop _ "," rval

  ","           shift, and go to state 37
  $default      reduce using rule 4 (avg_list)


state 20

   5) avg_list : "(" _ rvalCommaListLoop ")"

  "a"           shift, and go to state 23
  "b"           shift, and go to state 24
  "c"           shift, and go to state 25

  rvalCommaListLoop  go to state 38
  rval          go to state 21

state 21

   6) rvalCommaListLoop : rval _
  11) rvalCommaListLoop : rval _

  $end          [reduce using rule 11 (rvalCommaListLoop)]
  ")"           [reduce using rule 11 (rvalCommaListLoop)]
  ","           [reduce using rule 11 (rvalCommaListLoop)]
  "+"           [reduce using rule 11 (rvalCommaListLoop)]
  "*"           [reduce using rule 11 (rvalCommaListLoop)]
  "/"           [reduce using rule 11 (rvalCommaListLoop)]
  "-"           [reduce using rule 11 (rvalCommaListLoop)]
  $default      reduce using rule 6 (rvalCommaListLoop)


state 22

   8) avg : avg_str avg_list _

  $default      reduce using rule 8 (avg)


state 23

  14) rval : "a" _

  $default      reduce using rule 14 (rval)


state 24

  15) rval : "b" _

  $default      reduce using rule 15 (rval)


state 25

  16) rval : "c" _

  $default      reduce using rule 16 (rval)


state 26

   7) rvalCommaListLoop : rvalCommaListLoop _ "," rval
   9) best_list : rvalCommaListLoop _
  12) rvalCommaListLoop : rvalCommaListLoop _ "," rval

  ","           shift, and go to state 37
  $default      reduce using rule 9 (best_list)


state 27

  10) best_list : "(" _ NUMBER "," rvalCommaListLoop ")"

  NUMBER        shift, and go to state 39


state 28

  13) best : best_str best_list _

  $default      reduce using rule 13 (best)


state 29

  17) exp : exp _ "+" exp
  18) exp : exp _ "*" exp
  19) exp : exp _ "/" exp
  20) exp : exp _ "-" exp
  21) exp : "(" exp _ ")"

  ")"           shift, and go to state 40
  "+"           shift, and go to state 13
  "*"           shift, and go to state 14
  "/"           shift, and go to state 15
  "-"           shift, and go to state 16


state 30


  $default      accept


state 31

  17) exp : exp _ "+" exp
  17) exp : exp "+" exp _
  18) exp : exp _ "*" exp
  19) exp : exp _ "/" exp
  20) exp : exp _ "-" exp

  "+"           shift, and go to state 13
  "+"           [reduce using rule 17 (exp)]
  "*"           shift, and go to state 14
  "*"           [reduce using rule 17 (exp)]
  "/"           shift, and go to state 15
  "/"           [reduce using rule 17 (exp)]
  "-"           shift, and go to state 16
  "-"           [reduce using rule 17 (exp)]
  $default      reduce using rule 17 (exp)


state 32

  17) exp : exp _ "+" exp
  18) exp : exp _ "*" exp
  18) exp : exp "*" exp _
  19) exp : exp _ "/" exp
  20) exp : exp _ "-" exp

  "+"           shift, and go to state 13
  "+"           [reduce using rule 18 (exp)]
  "*"           shift, and go to state 14
  "*"           [reduce using rule 18 (exp)]
  "/"           shift, and go to state 15
  "/"           [reduce using rule 18 (exp)]
  "-"           shift, and go to state 16
  "-"           [reduce using rule 18 (exp)]
  $default      reduce using rule 18 (exp)


state 33

  17) exp : exp _ "+" exp
  18) exp : exp _ "*" exp
  19) exp : exp _ "/" exp
  19) exp : exp "/" exp _
  20) exp : exp _ "-" exp

  "+"           shift, and go to state 13
  "+"           [reduce using rule 19 (exp)]
  "*"           shift, and go to state 14
  "*"           [reduce using rule 19 (exp)]
  "/"           shift, and go to state 15
  "/"           [reduce using rule 19 (exp)]
  "-"           shift, and go to state 16
  "-"           [reduce using rule 19 (exp)]
  $default      reduce using rule 19 (exp)


state 34

  17) exp : exp _ "+" exp
  18) exp : exp _ "*" exp
  19) exp : exp _ "/" exp
  20) exp : exp _ "-" exp
  20) exp : exp "-" exp _

  "+"           shift, and go to state 13
  "+"           [reduce using rule 20 (exp)]
  "*"           shift, and go to state 14
  "*"           [reduce using rule 20 (exp)]
  "/"           shift, and go to state 15
  "/"           [reduce using rule 20 (exp)]
  "-"           shift, and go to state 16
  "-"           [reduce using rule 20 (exp)]
  $default      reduce using rule 20 (exp)


state 35

   2) avg_str : "a" "v" "g" _

  $default      reduce using rule 2 (avg_str)


state 36

   3) best_str : "b" "e" "s" _ "t"

  "t"           shift, and go to state 41


state 37

   7) rvalCommaListLoop : rvalCommaListLoop "," _ rval
  12) rvalCommaListLoop : rvalCommaListLoop "," _ rval

  "a"           shift, and go to state 23
  "b"           shift, and go to state 24
  "c"           shift, and go to state 25

  rval          go to state 42

state 38

   5) avg_list : "(" rvalCommaListLoop _ ")"
   7) rvalCommaListLoop : rvalCommaListLoop _ "," rval
  12) rvalCommaListLoop : rvalCommaListLoop _ "," rval

  ")"           shift, and go to state 43
  ","           shift, and go to state 37


state 39

  10) best_list : "(" NUMBER _ "," rvalCommaListLoop ")"

  ","           shift, and go to state 44


state 40

  21) exp : "(" exp ")" _

  $default      reduce using rule 21 (exp)


state 41

   3) best_str : "b" "e" "s" "t" _

  $default      reduce using rule 3 (best_str)


state 42

   7) rvalCommaListLoop : rvalCommaListLoop "," rval _
  12) rvalCommaListLoop : rvalCommaListLoop "," rval _

  $end          [reduce using rule 12 (rvalCommaListLoop)]
  ")"           [reduce using rule 12 (rvalCommaListLoop)]
  ","           [reduce using rule 12 (rvalCommaListLoop)]
  "+"           [reduce using rule 12 (rvalCommaListLoop)]
  "*"           [reduce using rule 12 (rvalCommaListLoop)]
  "/"           [reduce using rule 12 (rvalCommaListLoop)]
  "-"           [reduce using rule 12 (rvalCommaListLoop)]
  $default      reduce using rule 7 (rvalCommaListLoop)


state 43

   5) avg_list : "(" rvalCommaListLoop ")" _

  $default      reduce using rule 5 (avg_list)


state 44

  10) best_list : "(" NUMBER "," _ rvalCommaListLoop ")"

  "a"           shift, and go to state 23
  "b"           shift, and go to state 24
  "c"           shift, and go to state 25

  rval          go to state 21
  rvalCommaListLoop  go to state 45

state 45

   7) rvalCommaListLoop : rvalCommaListLoop _ "," rval
  10) best_list : "(" NUMBER "," rvalCommaListLoop _ ")"
  12) rvalCommaListLoop : rvalCommaListLoop _ "," rval

  ")"           shift, and go to state 46
  ","           shift, and go to state 37


state 46

  10) best_list : "(" NUMBER "," rvalCommaListLoop ")" _

  $default      reduce using rule 10 (best_list)

